import type { RunnableConfig } from "@langchain/core/runnables";
import type { Redis } from "ioredis";
import { BaseCheckpointSaver, type Checkpoint, type CheckpointListOptions, type CheckpointTuple, type SerializerProtocol, type PendingWrite, type CheckpointMetadata } from "@langchain/langgraph-checkpoint";
export type RedisSaverParams = {
    connection: Redis;
};
export declare class RedisSaver extends BaseCheckpointSaver {
    connection: Redis;
    constructor({ connection }: RedisSaverParams, serde?: SerializerProtocol);
    put(config: RunnableConfig, checkpoint: Checkpoint, metadata: CheckpointMetadata): Promise<RunnableConfig>;
    putWrites(config: RunnableConfig, writes: PendingWrite[], task_id: string): Promise<void>;
    getTuple(config: RunnableConfig): Promise<CheckpointTuple | undefined>;
    list(config: RunnableConfig, options?: CheckpointListOptions): AsyncGenerator<CheckpointTuple>;
    private _getCheckpointKey;
}
